/************************************************************************/

DROP TABLE AUTHOR IF EXISTS;

CREATE TABLE AUTHOR (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    NAME VARCHAR(40) NOT NULL,
    FIRST_NAME VARCHAR(40) NOT NULL,
    MIDDLE_NAME VARCHAR(40) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    CONSTRAINT IDX_AUTHOR_ID PRIMARY KEY (ID)
);

/************************************************************************/

DROP TABLE LEVEL IF EXISTS;

CREATE TABLE LEVEL (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    NAME VARCHAR(40) NOT NULL,
    CONSTRAINT IDX_LEVEL_ID PRIMARY KEY (ID)
);

/************************************************************************/

DROP TABLE EXERCISE_BASE IF EXISTS;

CREATE TABLE EXERCISE_BASE (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    NAME VARCHAR(40) NOT NULL,
    /*LEVEL_ID INTEGER NOT NULL,*/
    CONSTRAINT IDX_EXERCISE_BASE_ID PRIMARY KEY (ID)
    /*CONSTRAINT FK_LEVEL FOREIGN KEY (LEVEL_ID) REFERENCES LEVEL(ID)*/
);

/************************************************************************/

DROP TABLE ROUTINE_BASE IF EXISTS;

CREATE TABLE ROUTINE_BASE (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    NAME VARCHAR(40) NOT NULL,
    CONSTRAINT IDX_ROUTINE_BASE_ID PRIMARY KEY (ID)
);

/************************************************************************/

DROP TABLE ROUTINE_BASE_EXERCISE_BASE IF EXISTS;

CREATE TABLE ROUTINE_BASE_EXERCISE_BASE (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    ROUTINE_BASE_ID INTEGER NOT NULL,
    EXERCISE_BASE_ID INTEGER NOT NULL
);

/************************************************************************/

INSERT INTO AUTHOR (ID, NAME, FIRST_NAME, MIDDLE_NAME, LAST_NAME) VALUES (1, 'NOMBRE', 'PRIMER NOMBRE', 'MIDDLE NOMBRE', 'LAST NOMBRE');

INSERT INTO LEVEL (ID, NAME) VALUES (1, 'NIVEL 1');
INSERT INTO LEVEL (ID, NAME) VALUES (2, 'NIVEL 2');
INSERT INTO LEVEL (ID, NAME) VALUES (3, 'NIVEL 3');


